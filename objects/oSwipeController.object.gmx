<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 1000;

///Swipe Control Variables
mouseX = 0;
mouseY = 0;
mouseXStart = 0;
mouseYStart = 0;

swipe = false;
swipeTime = 0;
swipeSpeed = 0;

pointDir = 0;

enum TOUCH{
    none,
    left,
    right,
    up,
    down,
    press,
}

global.touchState = TOUCH.none;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.touchState = TOUCH.none;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swipe Actions
if (device_mouse_check_button_pressed(0, mb_left)){
    swipe = true;
    mouseXStart = mouse_x;
    mouseYStart = mouse_y;
}

if (swipe){
    mouseX = mouse_x;
    mouseY = mouse_y;
    swipeTime++;
    
    // what direction are we swiping in?
    pointDir = point_direction(mouseXStart, mouseYStart, mouseX, mouseY);

    // on release, check if it was a quick enough swipe and get the direction
    if (device_mouse_check_button_released(0, mb_left)){
        swipe = false;
        swipeSpeed = point_distance(mouseXStart, mouseYStart, mouseX, mouseY) / swipeTime;
        swipeTime = 0;

        if swipeSpeed &gt; 4.5{     

            if pointDir &gt; 315 &amp;&amp; pointDir &lt; 45 {
                global.touchState = TOUCH.right;
            } 
            else if pointDir &gt; 45 &amp;&amp; pointDir &lt; 135 {
                global.touchState = TOUCH.up;                
            } 
            else if pointDir &gt; 135 &amp;&amp; pointDir &lt; 225 {
                global.touchState = TOUCH.left;                
            }        
            else if pointDir &gt; 225 &amp;&amp; pointDir &lt; 315 {
                 global.touchState = TOUCH.down;               
            }         
        }
        else{
            global.touchState = TOUCH.press;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(8, 12, "High Score: " + string(highscore_value(1)));
draw_text(8, 34, "Score: " + string(score));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
